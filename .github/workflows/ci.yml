name: CI

on:
  push:
    branches: [ main ]
  pull_request:   # run for all PRs (parity with GitLab MR rule)
    types: [opened, synchronize, reopened, ready_for_review]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint (ruff + mypy)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip
          cache-dependency-path: |
            pyproject.toml
            setup.cfg
            **/requirements*.txt
            neat_ml/sam2/pyproject.toml
            neat_ml/sam2/setup.cfg

      - name: Create and activate venv (persist across steps)
        run: |
          set -euxo pipefail
          python -m venv .venv
          echo "VIRTUAL_ENV=$PWD/.venv" >> "$GITHUB_ENV"
          echo "$PWD/.venv/bin" >> "$GITHUB_PATH"
          python --version
          pip --version

      - name: Configure git safe.directory and submodules
        run: |
          set -euxo pipefail
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config --global --add safe.directory "$GITHUB_WORKSPACE/neat_ml/sam2"
          git submodule update --init --recursive

      - name: Install dependencies (parity with GitLab before_script)
        run: |
          set -euxo pipefail
          python -m pip install -U pip setuptools wheel
          python -m pip install \
            mypy ruff pandas-stubs \
            "numpy>=1.26.3,<=2.1.3" matplotlib xgboost pandas scikit-learn \
            openpyxl jinja2 python-ternary pytest shap interpret \
            types-tqdm types-Pillow scikit-image lightgbm lime \
            opencv-python-headless==4.10.0.84 \
            pyyaml types-pyyaml torch
          python -m pip install -e ./neat_ml/sam2/

      - name: Run mypy
        run: |
          set -euxo pipefail
          mypy .

      - name: Run ruff
        run: |
          set -euxo pipefail
          ruff check .

  functional_test:
    name: Functional test (python main.py)
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip
          cache-dependency-path: |
            pyproject.toml
            setup.cfg
            **/requirements*.txt
            neat_ml/sam2/pyproject.toml
            neat_ml/sam2/setup.cfg

      - name: Create and activate venv (persist across steps)
        run: |
          set -euxo pipefail
          python -m venv .venv
          echo "VIRTUAL_ENV=$PWD/.venv" >> "$GITHUB_ENV"
          echo "$PWD/.venv/bin" >> "$GITHUB_PATH"
          python --version

      - name: Configure git safe.directory and submodules
        run: |
          set -euxo pipefail
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config --global --add safe.directory "$GITHUB_WORKSPACE/neat_ml/sam2"
          git submodule update --init --recursive

      - name: Install runtime dependencies (parity with GitLab before_script)
        run: |
          set -euxo pipefail
          python -m pip install -U pip setuptools wheel
          python -m pip install \
            mypy ruff pandas-stubs \
            "numpy>=1.26.3,<=2.1.3" matplotlib xgboost pandas scikit-learn \
            openpyxl jinja2 python-ternary pytest shap interpret \
            types-tqdm types-Pillow scikit-image lightgbm lime \
            opencv-python-headless==4.10.0.84 \
            pyyaml types-pyyaml torch
          python -m pip install -e ./neat_ml/sam2/

      - name: Run end-to-end script
        run: |
          set -euxo pipefail
          python main.py

  unit_tests:
    name: Unit tests (pytest on neat_ml)
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip
          cache-dependency-path: |
            pyproject.toml
            setup.cfg
            **/requirements*.txt
            neat_ml/sam2/pyproject.toml
            neat_ml/sam2/setup.cfg

      - name: Create and activate venv (persist across steps)
        run: |
          set -euxo pipefail
          python -m venv .venv
          echo "VIRTUAL_ENV=$PWD/.venv" >> "$GITHUB_ENV"
          echo "$PWD/.venv/bin" >> "$GITHUB_PATH"
          python --version

      - name: Configure git safe.directory and submodules
        run: |
          set -euxo pipefail
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config --global --add safe.directory "$GITHUB_WORKSPACE/neat_ml/sam2"
          git submodule update --init --recursive

      - name: Install test dependencies and package
        run: |
          set -euxo pipefail
          python -m pip install -U pip setuptools wheel
          python -m pip install \
            mypy ruff pandas-stubs \
            "numpy>=1.26.3,<=2.1.3" matplotlib xgboost pandas scikit-learn \
            openpyxl jinja2 python-ternary pytest shap interpret \
            types-tqdm types-Pillow scikit-image lightgbm lime \
            opencv-python-headless==4.10.0.84 \
            pyyaml types-pyyaml torch
          python -m pip install -e ./neat_ml/sam2/
          python -m pip install -v .

      - name: Run pytest (import package)
        run: |
          set -euxo pipefail
          cd /tmp
          python -m pytest --pyargs neat_ml
